const projects = [
  {
    title: "Portfolio",
    text: "This is my inaugural React project, serving as a personal portfolio website to showcase their work and skills. The site you're currently viewing is this very project.",
    type: "Frontend",
    image: "portfolio-project.PNG",
    demo: "http://localhost:5173",
    github: "https://github.com/calKU0/Portfolio",
    frameworks: "React",
    technologies: "JavaScript, HTML, CSS",
  },
  {
    title: "Web API",
    text: "A modern Web API developed using ASP.NET Core, designed to facilitate seamless and secure data exchange between ERP and WMS systems. It leverages Entity Framework for data access and ensures robust integration between enterprise resource planning and warehouse management systems.",
    type: "Backend",
    image: "api-wms.jpg",
    demo: "",
    github: "https://github.com/calKU0/API_WMS",
    frameworks: "ASP.NET Core, Entity Framework",
    technologies: "C#, REST API, ERP XL API, SQL Server",
  },
  {
    title: "Our Memories",
    text: "An album application for couples, allowing them to store and cherish shared memories. This was my first ASP.NET MVC project, where I implemented user authentication and data management features.",
    image: "ourmemories-project.PNG",
    type: "Fullstack",
    demo: "https://ourmemories.azurewebsites.net",
    github: "https://github.com/calKU0/OurMemories",
    frameworks: "ASP.NET MVC, Entity Framework, Identity Framework",
    technologies: "C#, HTML, CSS, JavaScript, SQL Server",
  },
  {
    title: "Gamex Business Page",
    text: "A simple, static business website created for the company 'Gamex'. This project demonstrates proficiency in building responsive and visually appealing web pages using fundamental web technologies.",
    image: "gamex-project.PNG",
    type: "Frontend",
    demo: "https://www.gamex-olkusz.pl",
    github: "https://github.com/calKU0/GamexBusinessPage",
    frameworks: "None",
    technologies: "HTML, CSS, JavaScript",
  },
  {
    title: "Backend of e-commerce",
    text: "A backend system for an e-commerce platform, developed in Java using Test-Driven Development (TDD) principles. It employs Spring Boot for creating robust RESTful services and JUnit for testing, ensuring reliability and maintainability.",
    image: "ecommerce-project.jpeg",
    type: "Backend",
    demo: "",
    github: "https://github.com/calKU0/TDDWebProject",
    frameworks: "Spring Boot",
    technologies: "Java, JUnit, SQL",
  },
  {
    title: "ERP to WMS Data Sync",
    text: "A Windows Service designed to retrieve master data from an ERP system and transmit it to a WMS via REST API. This application ensures data consistency and accuracy between the two systems, enhancing operational efficiency.",
    image: "wms-erp.png",
    type: "Backend",
    demo: "",
    github: "https://github.com/calKU0/WMSSynchroService",
    frameworks: ".NET Framework",
    technologies: "C#, REST API, ERP XL API, SQL Server",
  },
  {
    title: "TCP/IP Service for Automation Systems",
    text: "A Windows Service application that facilitates communication with automation systems via the TCP/IP protocol. It integrates with Programmable Logic Controllers (PLCs) and Put-to-Light (PTL) systems, enabling seamless data exchange and control.",
    image: "put-to-light.jpg",
    type: "Backend",
    demo: "",
    github: "https://github.com/calKU0/TCPIPAutomationServer",
    frameworks: ".NET Framework",
    technologies: "C#, TCP/IP, PLC & PTL Integration",
  },
  {
    title: "Automated API Data Loader",
    text: "A Windows Service application that fetches data from an external API and inserts it into a database. This tool automates data retrieval and storage processes, ensuring timely and accurate data availability for downstream applications.",
    image: "api-windows-service.png",
    type: "Backend",
    demo: "",
    github: "https://github.com/calKU0/GaskaApiService",
    frameworks: ".NET Framework",
    technologies: "C#, REST API, SQL Server",
  },
  {
    title: "API Data Sync & XML Generator",
    text: "A console application built with .NET Core that automates data retrieval from an API, updates a database, and generates an XML file. It processes product codes from a .txt file, retrieves corresponding IDs from the database, fetches detailed product data via API, and saves the results in both the database and an XML file. The application integrates with MySQL and supports REST API.",
    image: "APIDataSyncXMLGenerator.png",
    type: "Backend",
    demo: "",
    github: "https://github.com/calKU0/APIDataSyncXMLGenerator",
    frameworks: ".NET Core",
    technologies: "C#, REST API, SQL Server",
  },
  {
    title: "Logistics Calendar",
    text: "A simple calendar application developed for the logistics department to manage deliveries and dispatches. This add-on for Comarch ERP XL utilizes its Hydra framework to integrate seamlessly with the ERP system, enhancing scheduling and coordination.",
    image: "logistics_calendar-project.PNG",
    type: "Fullstack",
    demo: "",
    github: "https://github.com/calKU0/KolejkowanieWydan",
    frameworks: "CDNXL Hydra, .NET Framework",
    technologies: "C#, SQL Server",
  },
  {
    title: "Replacement Part Manager",
    text: "A desktop add-on for Comarch ERP XL, utilizing its Hydra framework. This tool aids in managing replacement parts within the ERP system, streamlining inventory management and procurement processes.",
    image: "replacement_part_manager-project.PNG",
    type: "Fullstack",
    demo: "",
    github: "https://github.com/calKU0/HydraDodajOEM",
    frameworks: "CDNXL Hydra, .NET Framework",
    technologies: "C#, SQL Server",
  },
  {
    title: "Sales Correction Confirmation Service",
    text: "A Windows Service that automatically confirms sales correction documents using the ERP XL API. It automates the validation and approval process, reducing manual effort and minimizing errors.",
    image: "sales_correction_confirmation_service-project.webp",
    type: "Backend",
    demo: "",
    github: "https://github.com/calKU0/AutomatycznePotwierdzanieKorektService",
    frameworks: ".NET Framework",
    technologies: "C#, ERP XL API, Unit Testing, SQL Server",
  },
  {
    title: "Client Visit Planner Service",
    text: "A Windows Service that integrates with the CRM system to assign daily tasks to sales representatives. It downloads files from an FTP server and updates the database accordingly, facilitating efficient planning and task allocation.",
    image: "client_visit_planner_service-project.jpg",
    type: "Backend",
    demo: "",
    github: "https://github.com/calKU0/PrzedstawicieleTrasyService",
    frameworks: ".NET Framework",
    technologies: "C#, FTP, SQL Server",
  },
  {
    title: "SQL Queries",
    text: "Some of my SQL queries, procedures, and triggers that I have done during my career",
    image: "sql-project.jpg",
    type: "Backend",
    demo: "",
    github: "https://github.com/calKU0/SQL",
    frameworks: "None",
    technologies: "T-SQL, SQL Server",
  },
];

export default projects;
